% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R
\name{plot.JANE}
\alias{plot.JANE}
\title{Plot JANE Fits}
\usage{
\method{plot}{JANE}(
  x,
  type = "lsnc",
  true_labels,
  initial_values = FALSE,
  zoom = 100,
  density_type = "contour",
  alpha_edge = 0.1,
  alpha_node = 1,
  swap_axes = FALSE,
  ...
)
}
\arguments{
\item{x}{An object of S3 \code{\link{class}} "\code{JANE}", a result of a call to \code{JANE}.}

\item{type}{A character string to select the type of plot:
\itemize{
\item{'lsnc': plot the network using the estimated latent positions and color-code actors by cluster (default)}
\item{'misclassified': (can only be used if \code{true_labels} is \code{!NULL}) similar to 'lsnc', but will label misclassified actors in black}
\item{'uncertainty': similar to 'lsnc', but here the color gradient applied represents the actor-specific classification uncertainty}
\item{'trace_plot': presents various trace plots across the iterations of the EM algorithm}
}}

\item{true_labels}{(optional) A numeric, character, or factor vector of known true cluster labels. Must have the same length as number of actors in the fitted network (default is \code{NULL}).}

\item{initial_values}{A logical; if \code{TRUE} then summarize fit using the starting parameters used in the EM algorithm (default is \code{FALSE}, i.e., the results after the EM algorithm is run are summarized).}

\item{zoom}{A numeric value that controls the magnification of the plot.}

\item{density_type}{Choose from one of the following three options: 'contour' (default), 'hdr', 'image', and 'persp' indicating the density plot type.}

\item{alpha_edge}{A numeric value that controls the transparency of the network edges.}

\item{alpha_node}{A numeric value that controls the transparency of the actors in the network.}

\item{swap_axes}{A logical; if \code{TRUE} will swap the x and y axes (default is \code{FALSE}).}

\item{...}{Unused.}
}
\value{
A plot of the network or trace plot of the EM run.
}
\description{
S3 plot method for object of class "\code{JANE}"
}
\details{
The classification of actors into specific clusters is based on a hard clustering rule of \eqn{\{h | Z_ih = max_k Z_ik\}}. Additionally, the actor-specific classification uncertainty is derived as 1 - \eqn{max_k Z_ik}.

The trace plot contains up to five unique plots tracking various metrics across the EM algorithm run, depending on the \code{\link[JANE]{JANE}} control parameter \code{termination_rule}.

When \code{termination_rule = 'prob_mat'} five plots will be presented. Specifically, in the top panel, the plot on the left presents the change in the absolute difference in \eqn{Z} (i.e., the \eqn{N \times K} cluster assignment probability matrix) between subsequent iterations. The exact quantile of the absolute difference plotted are presented in parentheses and determined by the \code{\link[JANE]{JANE}} control parameter \code{quantile_diff}. For example, the default control parameter \code{quantile_diff} = 1, so the values being plotted are the max absolute difference in \eqn{Z} between subsequent iterations. The plot on the right of the top panel presents the absolute difference in the cumulative average of the absolute change in \eqn{Z}  and \eqn{U} (i.e., the \eqn{N \times D} matrix of latent positions) across subsequent iterations (absolute change in \eqn{Z}  and \eqn{U}  computed in an identical manner as described above). This metric is only tracked beginning at an iteration determined by the \code{n_its_start_CA} control parameter in \code{\link[JANE]{JANE}}. Note, this plot may be empty if the EM algorithm converges before the \code{n_its_start_CA}-th iteration. Finally, the bottom panel presents ARI, NMI, and CER values comparing the classifications between subsequent iterations, respectively. Specifically, at a given iteration we determine the  classification of actors in clusters based on a hard clustering rule of \eqn{\{h | Z_ih = max_k Z_ik\}} and given these labels from two subsequent iterations, we compute and plot the ARI, NMI and CER.

When \code{termination_rule = 'Q'} is utilized, the plots generated are similar to those described in the previous paragraph. However, instead of tracking the change in \eqn{Z} over iterations, here the absolute difference in the objective function of the E-step evaluated using parameters from subsequent iterations is tracked. Furthermore, the cumulative average of the absolute change in \eqn{U} is no longer tracked.

When \code{termination_rule \%in\% c('ARI', 'NMI', 'CER')}, then only four plots will be presented. Specifically, the top left panel presents a plot of the absolute difference in the cumulative average of the absolute change in the specific \code{termination_rule}  employed and \eqn{U} across iterations. As previously mentioned, if the EM algorithm converges before the \code{n_its_start_CA}-th iteration then this will be an empty plot. Furthermore, the other three plots present ARI, NMI, and CER values comparing the classifications between subsequent iterations, respectively.
}
\examples{
\dontrun{
# Simulate network
mus <- matrix(c(-1,-1,1,-1,1,1), 
              nrow = 3,
              ncol = 2, 
              byrow = TRUE)
omegas <- array(c(diag(rep(7,2)),
                  diag(rep(7,2)), 
                  diag(rep(7,2))), 
                  dim = c(2,2,3))
p_k <- rep(1/3, 3)
beta0 <- 1.0
sim_data <- JANE::sim_A(N = 100L, 
                        model = "NDH",
                        mus = mus, 
                        omegas = omegas, 
                        p_k = p_k, 
                        beta0 = beta0, 
                        remove_isolates = TRUE)
                        
# Run JANE on simulated data
res <- JANE::JANE(A = sim_data$A,
                  D = 2L,
                  K = 3L,
                  initialization = "GNN", 
                  model = "NDH",
                  case_control = FALSE,
                  DA_type = "none")

# plot trace plot
plot(res, type = "trace_plot")
                   
# plot network
plot(res)

# plot network - misclassified
plot(res, type = "misclassified", true_labels = apply(sim_data$Z, 1, which.max))

# plot network - uncertainty and swap axes
plot(res, type = "uncertainty", swap_axes = T)

# plot network - but only show contours of MVNs
plot(res, swap_axes = T, alpha_edge = 0, alpha_node = 0)

# plot using starting values of EM algorithm
plot(res, initial_values = TRUE)
}
}
\seealso{
\code{\link[mclust]{surfacePlot}}, \code{\link[mclust]{adjustedRandIndex}}, \code{\link[mclust]{classError}},  \code{\link[aricode]{NMI}}
}
